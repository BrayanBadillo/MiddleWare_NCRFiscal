// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NCRFiscalManager.Infraestructure.Repositories.Context;

#nullable disable

namespace NCRFiscalManager.Infraestructure.Migrations
{
    [DbContext(typeof(NCRFiscalContext))]
    [Migration("20230204030146_MigrationInitialtoFinal")]
    partial class MigrationInitialtoFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.EmitterInVoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommercialRegistrationNum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IdentificationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ObligationCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("PersonType")
                        .HasColumnType("tinyint");

                    b.Property<string>("RegimeType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TechOperatorEmitterInVoiceId")
                        .HasColumnType("int");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TributeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TributeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("EmitterInVoice");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.InvoiceTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CUFE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FiscalCorrelative")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PointOnSaleId")
                        .HasColumnType("int");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PointOnSaleId");

                    b.ToTable("InvoiceTransactions");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.PaymentMethods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmitterInVoiceId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmitterInVoiceId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.PointOnSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DateOfResolution")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmitterInVoiceId")
                        .HasColumnType("int");

                    b.Property<string>("FinalInvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InitInvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Plazo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StoreKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmitterInVoiceId");

                    b.ToTable("PointOnSales");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.TechOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TechOperators");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.TechOperatorEmitterInVoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConnectionData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmitterInVoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TechOperatorId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmitterInVoiceId")
                        .IsUnique();

                    b.HasIndex("TechOperatorId");

                    b.ToTable("TechOperatorEmitterInVoice");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.InvoiceTransaction", b =>
                {
                    b.HasOne("NCRFiscalManager.Core.Entities.PointOnSale", "PointOnSale")
                        .WithMany("InvoiceTransactions")
                        .HasForeignKey("PointOnSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PointOnSale");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.PaymentMethods", b =>
                {
                    b.HasOne("NCRFiscalManager.Core.Entities.EmitterInVoice", "EmitterInVoice")
                        .WithMany()
                        .HasForeignKey("EmitterInVoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmitterInVoice");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.PointOnSale", b =>
                {
                    b.HasOne("NCRFiscalManager.Core.Entities.EmitterInVoice", "EmitterInVoice")
                        .WithMany("PointOnSale")
                        .HasForeignKey("EmitterInVoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmitterInVoice");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.TechOperatorEmitterInVoice", b =>
                {
                    b.HasOne("NCRFiscalManager.Core.Entities.EmitterInVoice", "EmitterInVoice")
                        .WithOne("TechOperatorEmitterInVoice")
                        .HasForeignKey("NCRFiscalManager.Core.Entities.TechOperatorEmitterInVoice", "EmitterInVoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NCRFiscalManager.Core.Entities.TechOperator", "TechOperator")
                        .WithMany()
                        .HasForeignKey("TechOperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmitterInVoice");

                    b.Navigation("TechOperator");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.EmitterInVoice", b =>
                {
                    b.Navigation("PointOnSale");

                    b.Navigation("TechOperatorEmitterInVoice");
                });

            modelBuilder.Entity("NCRFiscalManager.Core.Entities.PointOnSale", b =>
                {
                    b.Navigation("InvoiceTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
